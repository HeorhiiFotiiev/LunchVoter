DROP TABLE user_roles IF EXISTS;
DROP TABLE dishes  IF EXISTS cascade;
DROP TABLE users  IF EXISTS cascade;
DROP TABLE menus  IF EXISTS cascade;
DROP TABLE restaurant  IF EXISTS cascade;
DROP TABLE menus_dishes  IF EXISTS cascade;
DROP TABLE votes  IF EXISTS cascade;
DROP SEQUENCE global_seq IF EXISTS;

CREATE SEQUENCE GLOBAL_SEQ
  AS INTEGER
  START WITH 100000;

CREATE TABLE users
(
  id               INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name             VARCHAR(255)            NOT NULL,
  email            VARCHAR(255)            NOT NULL,
  password         VARCHAR(255)            NOT NULL,
  enabled          BOOLEAN DEFAULT TRUE    NOT NULL,
  registered       TIMESTAMP DEFAULT now() NOT NULL
);

CREATE UNIQUE INDEX users_unique_email_idx
  ON USERS (email);

CREATE TABLE user_roles
(
  user_id INTEGER NOT NULL,
  role    VARCHAR(255),
  CONSTRAINT user_roles_idx UNIQUE (user_id, role),
  FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE
);

CREATE TABLE dishes
(
  id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  calories    INTEGER      NOT NULL,
  price       DECIMAL      NOT NULL
);

CREATE TABLE menus
(
  id      INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  name    VARCHAR(255) NOT NULL
);

CREATE TABLE menus_dishes
(
    dish_id INTEGER NOT NULL,
    menu_id INTEGER NOT NULL,
    FOREIGN KEY (dish_id) REFERENCES dishes (id) ON UPDATE CASCADE ,
    FOREIGN KEY (menu_id) REFERENCES menus (id) ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY (dish_id,menu_id)
);

CREATE TABLE restaurant
(
  id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
  menu_id     INTEGER,
  name        VARCHAR(255) NOT NULL,
  address     VARCHAR(255) NOT NULL,
  FOREIGN KEY (menu_id) REFERENCES menus (id)
);

CREATE TABLE votes
(
id          INTEGER GENERATED BY DEFAULT AS SEQUENCE GLOBAL_SEQ PRIMARY KEY,
vote_date   TIMESTAMP DEFAULT now() NOT NULL,
user_id     INTEGER NOT NULL,
restaurant_id INTEGER NOT NULL,
FOREIGN KEY (user_id) REFERENCES USERS (id) ON DELETE CASCADE ON UPDATE CASCADE,
FOREIGN KEY (restaurant_id) REFERENCES restaurant (id) ON DELETE CASCADE ON UPDATE CASCADE
);

